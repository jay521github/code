{"name": "test_05[evaluation0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=103.0.5060.134)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x0112D953+2414931]\n\tOrdinal0 [0x010BF5E1+1963489]\n\tOrdinal0 [0x00FAC580+836992]\n\tOrdinal0 [0x00FDA4F3+1025267]\n\tOrdinal0 [0x00FD0293+983699]\n\tOrdinal0 [0x00FF449C+1131676]\n\tOrdinal0 [0x00FCFC74+982132]\n\tOrdinal0 [0x00FF46B4+1132212]\n\tOrdinal0 [0x01004812+1198098]\n\tOrdinal0 [0x00FF42B6+1131190]\n\tOrdinal0 [0x00FCE860+976992]\n\tOrdinal0 [0x00FCF756+980822]\n\tGetHandleVerifier [0x0139CC62+2510274]\n\tGetHandleVerifier [0x0138F760+2455744]\n\tGetHandleVerifier [0x011BEABA+551962]\n\tGetHandleVerifier [0x011BD916+547446]\n\tOrdinal0 [0x010C5F3B+1990459]\n\tOrdinal0 [0x010CA898+2009240]\n\tOrdinal0 [0x010CA985+2009477]\n\tOrdinal0 [0x010D3AD1+2046673]\n\tBaseThreadInitThunk [0x7598FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77187A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77187A6E+238]", "trace": "Login = (<KeyWords.keyword_web.WebKeys object at 0x000001C335BF0A60>, <Logger logger (DEBUG)>)\nevaluation = {'check_box': '/html/body/div[3]/div/div[2]/div/div[2]/div[2]/div/div[1]/div[2]/div[1]/div/div[1]/div/div/div/div/div/...o.001', 'new_factor': '//*[@id=\"root\"]/div/section/section/main/div/section/main/div[2]/div[1]/div[2]/div/button', ...}\n\n    @pytest.mark.parametrize('evaluation',load_yaml('../data/Measurement_management.yaml'))\n    @allure.epic('测评管理')\n    @allure.severity('normal')\n    @allure.story('因子管理')\n    def test_05(Login,evaluation):\n        wk, log = Login\n        with allure.step('点击进入测评管理'):\n            wk.click('xpath','//span[text()=\"测评管理\"]')\n        with allure.step('点击进入因子管理'):\n            wk.click('xpath','//a[text()=\"因子管理\"]')\n        with allure.step('点击进入新增因子'):\n            wk.click('xpath',evaluation['new_factor'])\n        with allure.step('输入因子名称'):\n            wk.input('id','advanced_search_name',evaluation['factor_name'])\n        with allure.step('保存并下一步'):\n            wk.scroll_foot()\n        with allure.step('选择题目模块'):\n>           wk.click('xpath','//span[text()=\"选择题目\"]')\n\noms.py:191: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\KeyWords\\keyword_web.py:67: in click\n    self.locator(name, value).click()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:89: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:773: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:430: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C335BD8D30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77187A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77187A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=103.0.5060.134)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x0112D953+2414931]\nE       \tOrdinal0 [0x010BF5E1+1963489]\nE       \tOrdinal0 [0x00FAC580+836992]\nE       \tOrdinal0 [0x00FDA4F3+1025267]\nE       \tOrdinal0 [0x00FD0293+983699]\nE       \tOrdinal0 [0x00FF449C+1131676]\nE       \tOrdinal0 [0x00FCFC74+982132]\nE       \tOrdinal0 [0x00FF46B4+1132212]\nE       \tOrdinal0 [0x01004812+1198098]\nE       \tOrdinal0 [0x00FF42B6+1131190]\nE       \tOrdinal0 [0x00FCE860+976992]\nE       \tOrdinal0 [0x00FCF756+980822]\nE       \tGetHandleVerifier [0x0139CC62+2510274]\nE       \tGetHandleVerifier [0x0138F760+2455744]\nE       \tGetHandleVerifier [0x011BEABA+551962]\nE       \tGetHandleVerifier [0x011BD916+547446]\nE       \tOrdinal0 [0x010C5F3B+1990459]\nE       \tOrdinal0 [0x010CA898+2009240]\nE       \tOrdinal0 [0x010CA985+2009477]\nE       \tOrdinal0 [0x010D3AD1+2046673]\nE       \tBaseThreadInitThunk [0x7598FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77187A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77187A6E+238]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: ElementNotInteractableException"}, "steps": [{"name": "点击进入测评管理", "status": "passed", "start": 1658891063600, "stop": 1658891063684}, {"name": "点击进入因子管理", "status": "passed", "start": 1658891063684, "stop": 1658891063947}, {"name": "点击进入新增因子", "status": "passed", "start": 1658891063947, "stop": 1658891064310}, {"name": "输入因子名称", "status": "passed", "start": 1658891064310, "stop": 1658891064513}, {"name": "保存并下一步", "status": "passed", "start": 1658891064514, "stop": 1658891064517}, {"name": "选择题目模块", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=103.0.5060.134)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x0112D953+2414931]\n\tOrdinal0 [0x010BF5E1+1963489]\n\tOrdinal0 [0x00FAC580+836992]\n\tOrdinal0 [0x00FDA4F3+1025267]\n\tOrdinal0 [0x00FD0293+983699]\n\tOrdinal0 [0x00FF449C+1131676]\n\tOrdinal0 [0x00FCFC74+982132]\n\tOrdinal0 [0x00FF46B4+1132212]\n\tOrdinal0 [0x01004812+1198098]\n\tOrdinal0 [0x00FF42B6+1131190]\n\tOrdinal0 [0x00FCE860+976992]\n\tOrdinal0 [0x00FCF756+980822]\n\tGetHandleVerifier [0x0139CC62+2510274]\n\tGetHandleVerifier [0x0138F760+2455744]\n\tGetHandleVerifier [0x011BEABA+551962]\n\tGetHandleVerifier [0x011BD916+547446]\n\tOrdinal0 [0x010C5F3B+1990459]\n\tOrdinal0 [0x010CA898+2009240]\n\tOrdinal0 [0x010CA985+2009477]\n\tOrdinal0 [0x010D3AD1+2046673]\n\tBaseThreadInitThunk [0x7598FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77187A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77187A6E+238]\n\n", "trace": "  File \"C:\\Users\\jay52\\PycharmProjects\\6noble\\case\\oms.py\", line 191, in test_05\n    wk.click('xpath','//span[text()=\"选择题目\"]')\n  File \"C:\\Users\\jay52\\PycharmProjects\\6noble\\KeyWords\\keyword_web.py\", line 67, in click\n    self.locator(name, value).click()\n  File \"C:\\Users\\jay52\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 89, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\jay52\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 773, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\jay52\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 430, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\jay52\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1658891064517, "stop": 1658891074588}], "parameters": [{"name": "evaluation", "value": "{'new_factor': '//*[@id=\"root\"]/div/section/section/main/div/section/main/div[2]/div[1]/div[2]/div/button', 'factor_name': '因子测试No.001', 'check_box': '/html/body/div[3]/div/div[2]/div/div[2]/div[2]/div/div[1]/div[2]/div[1]/div/div[1]/div/div/div/div/div/div[2]/table/tbody/tr[5]/td[1]/label/span/input', 'next': '/html/body/div[1]/div/section/section/main/div/div[2]/div[3]/div/form/div[2]/div/div/div/button[2]/span', 'result': '//*[@id=\"root\"]/div/section/section/main/div/div[2]/div[4]/div/form/div[1]/div/div[2]/div/div/div/div/div[2]/table/tbody/tr[2]/td[4]/div/div/div/div/div[2]/div/div/div', 'txt': '这是结果描述，测试使用', 'expected_result': '/html/body/div[1]/div/section/section/main/div/section/main/div[2]/div[2]/div/div/div/div/div/div[2]/table/tbody/tr[2]/td[3]/span'}"}], "start": 1658891063599, "stop": 1658891074591, "uuid": "cc10a7ab-17c0-4659-b0ba-d24d448c775d", "historyId": "d295e3322138c3c2963e6a675ae3e149", "testCaseId": "a4e31c65b8ba7206355dfa413b4cf890", "fullName": "oms#test_05", "labels": [{"name": "epic", "value": "测评管理"}, {"name": "story", "value": "因子管理"}, {"name": "severity", "value": "normal"}, {"name": "suite", "value": "oms"}, {"name": "host", "value": "DESKTOP-FA1JTDA"}, {"name": "thread", "value": "21416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "oms"}]}