{"name": "登录模块", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"normal-login_account\"]\"}\n  (Session info: chrome=104.0.5112.81)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x002378B3+2193587]\n\tOrdinal0 [0x001D0681+1771137]\n\tOrdinal0 [0x000E41A8+803240]\n\tOrdinal0 [0x001124A0+992416]\n\tOrdinal0 [0x0011273B+993083]\n\tOrdinal0 [0x0013F7C2+1177538]\n\tOrdinal0 [0x0012D7F4+1103860]\n\tOrdinal0 [0x0013DAE2+1170146]\n\tOrdinal0 [0x0012D5C6+1103302]\n\tOrdinal0 [0x001077E0+948192]\n\tOrdinal0 [0x001086E6+952038]\n\tGetHandleVerifier [0x004E0CB2+2738370]\n\tGetHandleVerifier [0x004D21B8+2678216]\n\tGetHandleVerifier [0x002C17AA+512954]\n\tGetHandleVerifier [0x002C0856+509030]\n\tOrdinal0 [0x001D743B+1799227]\n\tOrdinal0 [0x001DBB68+1817448]\n\tOrdinal0 [0x001DBC55+1817685]\n\tOrdinal0 [0x001E5230+1856048]\n\tBaseThreadInitThunk [0x76A26BD9+25]\n\tRtlGetFullPathName_UEx [0x774B8FD2+1218]\n\tRtlGetFullPathName_UEx [0x774B8F9D+1165]\n\t(No symbol) [0x00000000]", "trace": "login = {'button': '//*[@id=\"normal-login\"]/div[3]/div/div/div/div/button/span', 'password': 123456, 'result': '//*[@id=\"pane-...lete\"]/div/div[1]/div/div[3]/div[2]/button', 'text': '//*[@id=\"root\"]/div/section/section/header/div/div[1]/span', ...}\nLogin = (<KeyWords.keyword_web.WebKeys object at 0x000001DC5EFB5310>, <Logger logger (DEBUG)>)\n\n    @pytest.mark.parametrize('login',load_yaml('./data/account.yaml'))\n    @allure.epic('登录oms系统')\n    @allure.story('登录oms系统')\n    @allure.title('登录6合oms后台')\n    def test_01(login,Login):\n        wk,log=Login\n        log.info('----------------------------------------本次自动化测试开始执行-------------------------------------------')\n        url = ReadIni('./conf/config.ini', 'DEV_OMS_SERVER', 'url')\n        wk.open(url)\n        allure.dynamic.title(login['title'])\n        log.info(f'后台的网址为：{url}')\n        #登录账号\n>       wk.input('id','normal-login_account',login['username'])\n\noms.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nKeyWords\\keyword_web.py:76: in input\n    self.locator(name, value).send_keys(txt)\nKeyWords\\keyword_web.py:60: in locator\n    return self.driver.find_element(name, value)\n..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1251: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:430: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DC5EFB5460>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...tFullPathName_UEx [0x774B8FD2+1218]\\\\n\\\\tRtlGetFullPathName_UEx [0x774B8F9D+1165]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"normal-login_account\"]\"}\nE         (Session info: chrome=104.0.5112.81)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x002378B3+2193587]\nE       \tOrdinal0 [0x001D0681+1771137]\nE       \tOrdinal0 [0x000E41A8+803240]\nE       \tOrdinal0 [0x001124A0+992416]\nE       \tOrdinal0 [0x0011273B+993083]\nE       \tOrdinal0 [0x0013F7C2+1177538]\nE       \tOrdinal0 [0x0012D7F4+1103860]\nE       \tOrdinal0 [0x0013DAE2+1170146]\nE       \tOrdinal0 [0x0012D5C6+1103302]\nE       \tOrdinal0 [0x001077E0+948192]\nE       \tOrdinal0 [0x001086E6+952038]\nE       \tGetHandleVerifier [0x004E0CB2+2738370]\nE       \tGetHandleVerifier [0x004D21B8+2678216]\nE       \tGetHandleVerifier [0x002C17AA+512954]\nE       \tGetHandleVerifier [0x002C0856+509030]\nE       \tOrdinal0 [0x001D743B+1799227]\nE       \tOrdinal0 [0x001DBB68+1817448]\nE       \tOrdinal0 [0x001DBC55+1817685]\nE       \tOrdinal0 [0x001E5230+1856048]\nE       \tBaseThreadInitThunk [0x76A26BD9+25]\nE       \tRtlGetFullPathName_UEx [0x774B8FD2+1218]\nE       \tRtlGetFullPathName_UEx [0x774B8F9D+1165]\nE       \t(No symbol) [0x00000000]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "steps": [{"name": "添加失败截图:", "status": "passed", "attachments": [{"name": "失败截图", "source": "c4d1afc4-a53b-4b46-a3da-14ceedbddf60-attachment.png", "type": "image/png"}], "start": 1672729476781, "stop": 1672729477540}], "attachments": [{"name": "log", "source": "1ff6f978-1e23-4ef1-9011-fee884cb9d93-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "ad72567f-17bf-4c40-b44a-395620e4d7d6-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "login", "value": "{'username': 17611593986, 'password': 123456, 'button': '//*[@id=\"normal-login\"]/div[3]/div/div/div/div/button/span', 'text': '//*[@id=\"root\"]/div/section/section/header/div/div[1]/span', 'title': '登录模块', 'result': '//*[@id=\"pane-complete\"]/div/div[1]/div/div[3]/div[2]/button'}"}], "start": 1672729466500, "stop": 1672729476696, "uuid": "b66e6e5a-aec7-467c-a241-80dbadbf3be6", "historyId": "d89ec88784e267981fd2d06b3c21c4c2", "testCaseId": "46c004ed3a9cc4b0f50ce5e4f24df170", "fullName": "oms#test_01", "labels": [{"name": "story", "value": "登录oms系统"}, {"name": "epic", "value": "登录oms系统"}, {"name": "suite", "value": "oms"}, {"name": "host", "value": "DESKTOP-FA1JTDA"}, {"name": "thread", "value": "72824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "oms"}]}